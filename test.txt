DEBUG:root:             Test AUC when intervening with 0 concept groups is 84.70% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 1 concept groups is 86.17% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 2 concept groups is 86.90% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 3 concept groups is 87.08% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 4 concept groups is 87.67% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 5 concept groups is 88.03% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 6 concept groups is 87.97% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 7 concept groups is 88.09% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 8 concept groups is 88.70% (avg int time is 0.00061s and construction time is 0.00011s).
DEBUG:root:Restarting run because we could not find test_acc_y_optimal_greedy_no_prior_ints_ac_flow_model_split_0 in old results.
[rank: 0] Global seed set to 42
DEBUG:root:             Test AUC when intervening with 0 concept groups is 84.70% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 1 concept groups is 90.23% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 2 concept groups is 92.61% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 3 concept groups is 93.32% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 4 concept groups is 93.59% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 5 concept groups is 93.55% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 6 concept groups is 93.17% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 7 concept groups is 92.01% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:             Test AUC when intervening with 8 concept groups is 88.70% (avg int time is 0.00058s and construction time is 0.00011s).
DEBUG:root:     Results for ac_flow_model_split_0 in split 0:
DEBUG:root:             test_acc_y_afacem_policy_ints -> [0.84701697 0.86166465 0.86897434 0.87077232 0.87674042 0.88032449
 0.87966747 0.88085798 0.88700169]
DEBUG:root:             avg_int_time_afacem_policy_ints -> 0.0006109730909681983
DEBUG:root:             construction_time_afacem_policy_ints -> 0.00011372566223144531
DEBUG:root:             test_acc_y_optimal_greedy_no_prior_ints -> [0.84701697 0.90232513 0.92606345 0.93319442 0.93593013 0.93547973
 0.93172754 0.92005595 0.88700169]
DEBUG:root:             avg_int_time_optimal_greedy_no_prior_ints -> 0.0005786378816184071
DEBUG:root:             construction_time_optimal_greedy_no_prior_ints -> 0.000110626220703125
DEBUG:root:     Trial 1 COMPLETED for ac_flow_model_split_0 ending at 25/04/2024 at 23:09:19 (18.8097 minutes): Time Breakdown:         Initialization: 0.1777 minutes          Training: 18.6317 minutes               Test Interventions: 0.0002 minutes              Evaluate Representation Metric: 0.0001 minutes
DEBUG:git.cmd:Popen(['git', 'cat-file', '--batch-check'], cwd=/home/xty20/cem, stdin=<valid stream>, shell=False, universal_newlines=False)
wandb: Tracking run with wandb version 0.16.6
wandb: Run data is saved locally in /home/xty20/cem/wandb/run-20240425_230919-9zoajle4
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run ac_flow_model_split_0
wandb: ⭐️ View project at https://wandb.ai/thomasyuan/afa